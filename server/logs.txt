INFO:app.api.websocket:WebSocket connection without token - allowing for development
INFO:app.api.websocket:Attempting to connect WebSocket for upload_id: upload_1760487112913_4mp0qnmdz, session_id: session_1760487112923_8ezoqh747
INFO:     127.0.0.1:49795 - "WebSocket /api/ws/progress/upload_1760487112913_4mp0qnmdz?session_id=session_1760487112923_8ezoqh747" [accepted]
INFO:app.services.websocket_service:WebSocket connected: upload_id=upload_1760487112913_4mp0qnmdz, session_id=session_1760487112923_8ezoqh747, timeout=1800s
INFO:     connection open
INFO:app.api.websocket:WebSocket connected successfully for upload_id: upload_1760487112913_4mp0qnmdz, session_id: session_1760487112923_8ezoqh747
INFO:app.api.websocket:Started keepalive task for upload_id=upload_1760487112913_4mp0qnmdz
INFO:     127.0.0.1:49801 - "OPTIONS /api/extract-tables-smart/ HTTP/1.1" 200 OK
INFO:app.services.gcs_utils:✅ File uploaded to GCS: statements/68b19b72-b540-4bdb-a80f-44c8bc527025/01.24.25 Allied Innovative Payment.pdf
INFO:app.services.gcs_utils:✅ Generated signed URL for GCS file with inline headers: statements/68b19b72-b540-4bdb-a80f-44c8bc527025/01.24.25 Allied Innovative Payment.pdf
INFO:app.services.websocket_service:Broadcasting message to upload_id upload_1760487112913_4mp0qnmdz: STEP_STARTED
INFO:app.services.websocket_service:Found 1 connections for upload_id upload_1760487112913_4mp0qnmdz
INFO:app.services.websocket_service:Step started: Uploading File (Step 1) for upload_id upload_1760487112913_4mp0qnmdz
INFO:app.services.audit_logging_service:Audit: data_view by user f6cf1764-5bfc-4352-abd9-81b72b7cf191 on extraction_process (ID: f5ff1208-7038-4ca7-9a27-673b10897ee6)
INFO:app.services.websocket_service:Broadcasting message to upload_id upload_1760487112913_4mp0qnmdz: STEP_STARTED
INFO:app.services.websocket_service:Found 1 connections for upload_id upload_1760487112913_4mp0qnmdz
INFO:app.services.websocket_service:Step started: Extracting Metadata (Step 2) for upload_id upload_1760487112913_4mp0qnmdz
INFO:app.services.mistral.service:✅ Mistral client initialized successfully
ERROR:app.services.mistral.service:❌ Failed to initialize Mistral client: 'MistralDocumentAIService' object has no attribute 'ocr_model'
Traceback (most recent call last):
  File "/Users/kayttaja/Desktop/commision-tracker/server/app/services/mistral/service.py", line 239, in _initialize_client
    logger.info(f"   Model: {self.ocr_model} (Mistral OCR for Document AI)")
                             ^^^^^^^^^^^^^^
AttributeError: 'MistralDocumentAIService' object has no attribute 'ocr_model'
INFO:app.services.mistral.service:Enhanced Mistral service initialized with summary detection and performance optimization
INFO:app.services.company_name_service:spaCy not available, using pattern matching only
INFO:app.services.gpt4o_vision_service:GPT-5 Vision service initialized successfully
2025-10-15 03:12:00 | INFO | app.new_extraction_services.pipeline.extraction_pipeline:_initialize_components:103 | Initializing pipeline components...
2025-10-15 03:12:00 | INFO | app.new_extraction_services.models.tableformer:_load_models:94 | Loading TableFormer models...
2025-10-15 03:12:00 | INFO | app.new_extraction_services.models.tableformer:_load_models:105 | TableFormer models loaded in 0.00s
Using a slow image processor as `use_fast` is unset and a slow processor was saved with this model. `use_fast=True` will be the default behavior in v4.52, even if the model was saved with a slow processor. This will result in minor differences in outputs. You'll still be able to use a slow processor with `use_fast=False`.
The `max_size` parameter is deprecated and will be removed in v4.26. Please specify in `size['longest_edge'] instead`.
INFO:timm.models._builder:Loading pretrained weights from Hugging Face hub (timm/resnet18.a1_in1k)
INFO:timm.models._hub:[timm/resnet18.a1_in1k] Safe alternative available for 'pytorch_model.bin' (as 'model.safetensors'). Loading weights using safetensors.
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.0.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.0.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.0.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.0.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.0.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.0.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.1.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.1.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.1.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.1.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.1.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.1.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.0.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.0.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.0.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.0.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.0.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.0.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.0.downsample.0.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.0.downsample.1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.0.downsample.1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.1.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.1.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.1.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.1.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.1.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.1.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.downsample.0.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.downsample.1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.downsample.1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.1.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.1.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.1.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.1.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.1.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.1.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.downsample.0.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.downsample.1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.downsample.1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.1.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.1.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.1.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.1.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.1.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.1.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
INFO:timm.models._builder:Missing keys (fc.weight, fc.bias) discovered while loading pretrained weights. This is expected if model is being adapted.
Some weights of the model checkpoint at microsoft/table-transformer-detection were not used when initializing TableTransformerForObjectDetection: ['model.backbone.conv_encoder.model.layer2.0.downsample.1.num_batches_tracked', 'model.backbone.conv_encoder.model.layer3.0.downsample.1.num_batches_tracked', 'model.backbone.conv_encoder.model.layer4.0.downsample.1.num_batches_tracked']
- This IS expected if you are initializing TableTransformerForObjectDetection from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing TableTransformerForObjectDetection from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2025-10-15 03:12:01 | INFO | app.new_extraction_services.models.advanced_tableformer:_load_detection_model:44 | Table detection model loaded successfully
2025-10-15 03:12:02 | INFO | app.new_extraction_services.models.advanced_tableformer:_load_structure_model:76 | Table structure model loaded successfully
2025-10-15 03:12:02 | INFO | app.new_extraction_services.pipeline.extraction_pipeline:_initialize_components:114 | Advanced TableFormer initialized
WARNING:easyocr.easyocr:Using CPU. Note: This module is much faster with a GPU.


e checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.1.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.1.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.downsample.0.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.downsample.1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.downsample.1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.1.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.1.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.1.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.1.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.1.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.1.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.downsample.0.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.downsample.1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.downsample.1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.1.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.1.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.1.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.1.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.1.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.1.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
INFO:timm.models._builder:Missing keys (fc.weight, fc.bias) discovered while loading pretrained weights. This is expected if model is being adapted.
Some weights of the model checkpoint at microsoft/table-transformer-detection were not used when initializing TableTransformerForObjectDetection: ['model.backbone.conv_encoder.model.layer2.0.downsample.1.num_batches_tracked', 'model.backbone.conv_encoder.model.layer3.0.downsample.1.num_batches_tracked', 'model.backbone.conv_encoder.model.layer4.0.downsample.1.num_batches_tracked']
- This IS expected if you are initializing TableTransformerForObjectDetection from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing TableTransformerForObjectDetection from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2025-10-15 03:12:01 | INFO | app.new_extraction_services.models.advanced_tableformer:_load_detection_model:44 | Table detection model loaded successfully
2025-10-15 03:12:02 | INFO | app.new_extraction_services.models.advanced_tableformer:_load_structure_model:76 | Table structure model loaded successfully
2025-10-15 03:12:02 | INFO | app.new_extraction_services.pipeline.extraction_pipeline:_initialize_components:114 | Advanced TableFormer initialized
WARNING:easyocr.easyocr:Using CPU. Note: This module is much faster with a GPU.
2025-10-15 03:12:05 | INFO | app.new_extraction_services.models.tableformer:_init_easyocr:409 | EasyOCR initialized successfully
WARNING:easyocr.easyocr:Using CPU. Note: This module is much faster with a GPU.
2025-10-15 03:12:07 | INFO | app.new_extraction_services.models.advanced_ocr_engine:_init_ocr_engines:60 | EasyOCR engine initialized
2025-10-15 03:12:07 | INFO | app.new_extraction_services.models.advanced_ocr_engine:_init_ocr_engines:72 | Tesseract OCR engine initialized
2025-10-15 03:12:07 | INFO | app.new_extraction_services.models.advanced_ocr_engine:_init_ocr_engines:94 | Initialized 2 OCR engines to prevent OMP conflicts
2025-10-15 03:12:07 | INFO | app.new_extraction_services.pipeline.extraction_pipeline:_initialize_components:133 | Advanced OCR engine initialized
2025-10-15 03:12:07 | INFO | app.new_extraction_services.pipeline.extraction_pipeline:_initialize_components:141 | Pipeline components initialized successfully
INFO:timm.models._builder:Loading pretrained weights from Hugging Face hub (timm/resnet18.a1_in1k)
INFO:timm.models._hub:[timm/resnet18.a1_in1k] Safe alternative available for 'pytorch_model.bin' (as 'model.safetensors'). Loading weights using safetensors.
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.0.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.0.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.0.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.0.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.0.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.0.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.1.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.1.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.1.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.1.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.1.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer1.1.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.0.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.0.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.0.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.0.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.0.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.0.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.0.downsample.0.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.0.downsample.1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.0.downsample.1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.1.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.1.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.1.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.1.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.1.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer2.1.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.downsample.0.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.downsample.1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.0.downsample.1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.1.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.1.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.1.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.1.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.1.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer3.1.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.downsample.0.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.downsample.1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.0.downsample.1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.1.conv1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.1.bn1.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.1.bn1.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.1.conv2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.1.bn2.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/Users/kayttaja/Desktop/commision-tracker/server/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:2025: UserWarning: for layer4.1.bn2.bias: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
INFO:timm.models._builder:Missing keys (fc.weight, fc.bias) discovered while loading pretrained weights. This is expected if model is being adapted.
Some weights of the model checkpoint at microsoft/table-transformer-detection were not used when initializing TableTransformerForObjectDetection: ['model.backbone.conv_encoder.model.layer2.0.downsample.1.num_batches_tracked', 'model.backbone.conv_encoder.model.layer3.0.downsample.1.num_batches_tracked', 'model.backbone.conv_encoder.model.layer4.0.downsample.1.num_batches_tracked']
- This IS expected if you are initializing TableTransformerForObjectDetection from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing TableTransformerForObjectDetection from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2025-10-15 03:12:09 | INFO | app.new_extraction_services.models.advanced_tableformer:_load_detection_model:44 | Table detection model loaded successfully
2025-10-15 03:12:10 | INFO | app.new_extraction_services.models.advanced_tableformer:_load_structure_model:76 | Table structure model loaded successfully
WARNING:easyocr.easyocr:Using CPU. Note: This module is much faster with a GPU.
2025-10-15 03:12:12 | INFO | app.new_extraction_services.models.advanced_ocr_engine:_init_ocr_engines:60 | EasyOCR engine initialized
2025-10-15 03:12:13 | INFO | app.new_extraction_services.models.advanced_ocr_engine:_init_ocr_engines:72 | Tesseract OCR engine initialized
2025-10-15 03:12:13 | INFO | app.new_extraction_services.models.advanced_ocr_engine:_init_ocr_engines:94 | Initialized 2 OCR engines to prevent OMP conflicts
INFO:app.services.company_name_service:spaCy not available, using pattern matching only
2025-10-15 03:12:13 | INFO | app.services.new_extraction_service:__init__:57 | New Extraction Service initialized successfully
INFO:app.services.company_name_service:spaCy not available, using pattern matching only
✅ Set GOOGLE_DOCAI_PROCESSOR_ID to: 521303e404fb7809
✅ Google Document AI initialized - Project: pdf-tables-extractor-465009, Processor: 521303e404fb7809
INFO:app.services.enhanced_extraction_service:✅ Enhanced Extraction Service initialized
INFO:app.services.enhanced_extraction_service:📋 PRIMARY: Mistral Document AI (extraction) + GPT-4 (AI operations)
INFO:app.services.enhanced_extraction_service:⏱️  Timeout management: {'metadata_extraction': 300, 'document_processing': 600, 'table_extraction': 1200, 'post_processing': 300, 'total_process': 1800}
INFO:app.services.websocket_service:Broadcasting message to upload_id upload_1760487112913_4mp0qnmdz: STEP_STARTED
INFO:app.services.websocket_service:Found 1 connections for upload_id upload_1760487112913_4mp0qnmdz
INFO:app.services.websocket_service:Step started: Processing Table Data (Step 3) for upload_id upload_1760487112913_4mp0qnmdz
WARNING:app.services.mistral.service:❌ Mistral client not initialized
ERROR:app.services.enhanced_extraction_service:❌ MISTRAL service not available: Mistral service not properly initialized. Check MISTRAL_API_KEY and SDK compatibility.
INFO:app.services.websocket_service:Broadcasting message to upload_id upload_1760487112913_4mp0qnmdz: error
INFO:app.services.websocket_service:Found 1 connections for upload_id upload_1760487112913_4mp0qnmdz
ERROR:app.services.websocket_service:Error in upload upload_1760487112913_4mp0qnmdz: ❌ MISTRAL service not available: Mistral service not properly initialized. Check MISTRAL_API_KEY and SDK compatibility.
INFO:app.services.audit_logging_service:Audit: data_view by user f6cf1764-5bfc-4352-abd9-81b72b7cf191 on extraction_complete (ID: f5ff1208-7038-4ca7-9a27-673b10897ee6)
INFO:app.services.websocket_service:Broadcasting message to upload_id upload_1760487112913_4mp0qnmdz: STEP_STARTED
INFO:app.services.websocket_service:Found 1 connections for upload_id upload_1760487112913_4mp0qnmdz
INFO:app.services.websocket_service:Step started: Finalizing (Step 6) for upload_id upload_1760487112913_4mp0qnmdz
INFO:app.services.user_profile_service:Recorded contribution: upload for user f6cf1764-5bfc-4352-abd9-81b72b7cf191
INFO:app.services.audit_logging_service:Audit: file_upload by user f6cf1764-5bfc-4352-abd9-81b72b7cf191 on statement_upload (ID: f5ff1208-7038-4ca7-9a27-673b10897ee6)
INFO:app.services.websocket_service:Broadcasting message to upload_id upload_1760487112913_4mp0qnmdz: EXTRACTION_COMPLETE
INFO:app.services.websocket_service:Found 1 connections for upload_id upload_1760487112913_4mp0qnmdz
INFO:app.services.websocket_service:Extraction complete for upload_id upload_1760487112913_4mp0qnmdz
INFO:app.api.new_extract:✅ Extraction complete! Sent results via WebSocket for upload_id: upload_1760487112913_4mp0qnmdz
INFO:     connection closed
INFO:app.api.websocket:WebSocket disconnected: upload_id=upload_1760487112913_4mp0qnmdz, session_id=session_1760487112923_8ezoqh747
INFO:app.services.websocket_service:WebSocket disconnected: upload_id=upload_1760487112913_4mp0qnmdz, session_id=session_1760487112923_8ezoqh747
INFO:app.api.websocket:WebSocket cleanup completed for upload_id=upload_1760487112913_4mp0qnmdz
INFO:app.api.pdf_proxy:🔄 Proxying PDF from: https://storage.googleapis.com/pdf_extraction_files_saver/statements/68b19b72-b540-4bdb-a80f-44c8bc5...
INFO:     127.0.0.1:49803 - "POST /api/extract-tables-smart/ HTTP/1.1" 200 OK
INFO:httpx:HTTP Request: GET https://storage.googleapis.com/pdf_extraction_files_saver/statements/68b19b72-b540-4bdb-a80f-44c8bc527025/01.24.25%20Allied%20Innovative%20Payment.pdf?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=docsai-table-extractor%40pdf-tables-extractor-465009.iam.gserviceaccount.com%2F20251015%2Fauto%2Fstorage%2Fgoog4_request&X-Goog-Date=20251015T001159Z&X-Goog-Expires=3599&X-Goog-SignedHeaders=host&response-content-disposition=inline&response-content-type=application%2Fpdf&X-Goog-Signature=5153f0cfcd2df70950705fc5dc8dbe3cedbae0d726fb63ca71abf41142de2d1a04eda14b1eb9172ef6d5e5919c21e39df9132cafc9ebccce7faf30996cb2148e26c482c7b01eb072dbf20c40ecc58da531f4a0cfd6b8524587a6f90014b1c551669d2a34e6ab57d0084138417eb1ecc4a1845cf89c411dd2be2fe76962cad6a4ccfe696ad9b825f08a40b83adca86df7a9a92f2176a075b63c227bcc7d1a35a4411067cd6b0496707cc2233cb57991bfd9f0fe526d6d9d70d1305b6ceb3ea9bae7ee64298f7885f66c09d4c5884be998eebc04c232c7cda30180f8e84c59fc28d3c0ed14029a44d0f78b19e3e647999fedaedb7956ef0062b48affb8dfe2d676 "HTTP/1.1 200 OK"
INFO:     127.0.0.1:49900 - "GET /api/pdf-proxy?url=https%3A%2F%2Fstorage.googleapis.com%2Fpdf_extraction_files_saver%2Fstatements%2F68b19b72-b540-4bdb-a80f-44c8bc527025%2F01.24.25%2520Allied%2520Innovative%2520Payment.pdf%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Ddocsai-table-extractor%2540pdf-tables-extractor-465009.iam.gserviceaccount.com%252F20251015%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20251015T001159Z%26X-Goog-Expires%3D3599%26X-Goog-SignedHeaders%3Dhost%26response-content-disposition%3Dinline%26response-content-type%3Dapplication%252Fpdf%26X-Goog-Signature%3D5153f0cfcd2df70950705fc5dc8dbe3cedbae0d726fb63ca71abf41142de2d1a04eda14b1eb9172ef6d5e5919c21e39df9132cafc9ebccce7faf30996cb2148e26c482c7b01eb072dbf20c40ecc58da531f4a0cfd6b8524587a6f90014b1c551669d2a34e6ab57d0084138417eb1ecc4a1845cf89c411dd2be2fe76962cad6a4ccfe696ad9b825f08a40b83adca86df7a9a92f2176a075b63c227bcc7d1a35a4411067cd6b0496707cc2233cb57991bfd9f0fe526d6d9d70d1305b6ceb3ea9bae7ee64298f7885f66c09d4c5884be998eebc04c232c7cda30180f8e84c59fc28d3c0ed14029a44d0f78b19e3e647999fedaedb7956ef0062b48affb8dfe2d676 HTTP/1.1" 200 OK
INFO:     127.0.0.1:49894 - "GET /api/pending/progress/f5ff1208-7038-4ca7-9a27-673b10897ee6/table_editor HTTP/1.1" 200 OK
